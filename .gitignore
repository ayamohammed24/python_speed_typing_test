from tkinter import *
import random

class Level02:
    sliderwords = ''
    count = 0

    def __init__(self):
        self.gui = Tk()  # Change the variable name from boom to gui
        self.fontlabel = Label(self.gui, text="", font=('arial', 20, 'italic bold'), bg='turquoise3', fg='red3', width=35)
        self.fontlabel.place(x=50, y=10)

        self.gui.geometry('700x600+250+30')
        self.gui.configure(bg='turquoise3')
        self.gui.title("Speed Typing Game <-- Level 02 -->")
        self.gui.iconbitmap('icon2.ico')
        self.gui.resizable(0, 0)
        clockpic = PhotoImage(file='clock.png')
        piclabel = Label(self.gui, image=clockpic, bg='turquoise3')
        piclabel.place(x=230, y=60)

        self.sentences = [
            ' A function is a block of reusable code',
            'A variable is a reserved memory location',
            'Lists are used to store multiple items in a single variable',
            'Python strings can be multiplied by an integer',
            'Programming is a basic skill for all engineers',
            'The def statement is used to define functions and methods',
            'The return statement is used to return values from a function',
            'True and False are the boolean values',
            'The break statement exits from a loop',
            'Lists are slower but are more powerful than tuples',
        ]

        self.score = 0
        self.miss = 0
        self.i = 0
        self.timeleft = 60

        self.labelSlider()

        self.wordlabel = Label(self.gui, text='', font=('cooper black', 18, 'italic bold'), bg='turquoise3')
        self.wordlabel.place(x=350, y=350, anchor=CENTER)

        self.scorelabel = Label(self.gui, text='Sentences', font=('castellar', 28, 'bold'), bg='turquoise3')
        self.scorelabel.place(x=30, y=100)

        self.scorelabelcount = Label(self.gui, text=self.i, font=('castellar', 28, 'italic bold'), bg='turquoise3')
        self.scorelabelcount.place(x=80, y=180)

        self.timelabel = Label(self.gui, text='Timer', font=('castellar', 28, 'bold'), bg='turquoise3')
        self.timelabel.place(x=510, y=100)

        self.timelabelcount = Label(self.gui, text=self.timeleft, font=('castellar', 28, 'italic bold'), bg='turquoise3')
        self.timelabelcount.place(x=550, y=180)

        self.gameplay_detaillabel = Label(self.gui, text='Type Sentence And Hit Enter to Start', font=('chiller', 20, 'italic bold'),
                                          bg='turquoise3', fg='red3')
        self.gameplay_detaillabel.place(x=350, y=510, anchor=CENTER)

        self.wordEntry = Entry(self.gui, font=('arial', 30), bd='10', justify=CENTER)
        self.wordEntry.place(x=350, y=410, anchor=CENTER)
        self.wordEntry.focus_set()

        self.badpic = PhotoImage(file='bad.png')
        self.goodpic = PhotoImage(file='good.png')
        self.propic = PhotoImage(file='pro.png')

        self.wowLabel = Label(self.gui, bg='turquoise3')
        self.wowLabel.place(x=80, y=490)

        self.wow1Label = Label(self.gui, bg='turquoise3')
        self.wow1Label.place(x=540, y=490)

        self.gui.bind('<Return>', self.play_game)  # Binding 'Enter' key to play_game function
        self.gui.protocol("closing", self.gui.destroy)  # Handle window close event#
        self.start_game()
        self.gui.mainloop()

    def start_game(self):
        random.shuffle(self.sentences)
        self.wordlabel.config(text=self.sentences[0])

    def labelSlider(self):
        text = 'Congratulations!, And Welcome To Level_02'
        if Level02.count < len(text):
            Level02.sliderwords += text[Level02.count]
            Level02.count += 1
            self.fontlabel.config(text=Level02.sliderwords)
            self.gui.after(250, self.labelSlider)

    def game_timer(self):
        if self.timeleft < 11:
            self.timelabelcount.config(fg='red')
        if self.timeleft > 0:
            self.timeleft -= 1
            self.timelabelcount.config(text=self.timeleft)
            self.timelabelcount.after(1000, self.game_timer)
        else:
            self.wordEntry.config(state=DISABLED)
            result = self.score - self.miss
            self.gameplay_detaillabel.config(text=f'Correct Sentences= {self.score} \nWrong Sentences= {self.miss}\nFinal Score= {result}')
            if result < 5:
                self.wowLabel.config(image=self.badpic)
                self.wow1Label.config(image=self.badpic)
            elif result >= 5:
                self.wowLabel.config(image=self.goodpic)
                self.wow1Label.config(image=self.goodpic)
            elif result >= 8:
                self.wowLabel.config(image=self.propic)
                self.wow1Label.config(image=self.propic)

    def play_game(self, event):
        user_input = self.wordEntry.get().strip()  # Remove leading and trailing spaces
        if user_input:  # Check if user input is not empty
            self.i += 1
            self.scorelabelcount.config(text=self.i)
            if self.timeleft == 60:
                self.game_timer()
            self.gameplay_detaillabel.config(text='')
            correct_sentence = self.wordlabel['text']
            if user_input.lower() == correct_sentence.lower():
                self.score += 1
            else:
                self.miss += 1
            random.shuffle(self.sentences)
            self.wordlabel.config(text=self.sentences[0])
            self.wordEntry.delete(0, END)


Level02()
